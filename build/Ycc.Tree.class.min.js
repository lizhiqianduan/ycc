!function(a){var b=1,c={};a.Tree=function(){this.$id=b++,this.$parentID=null,this.children=[],this.data=null,c[this.$id]=this},a.Tree.prototype.getNodeMap=function(){return c},a.Tree.prototype.getParent=function(){return this.$parentID?c[this.$parentID]:null},a.Tree.prototype.addChildTree=function(a){return a.$parentID?console.error("sub tree's parent has exist! can't add!",a):(a.$parentID=this.$id,this.children.push(a),this)},a.Tree.prototype.getDepth=function(){var a=this,b=1;if(a.children.length>0)for(var c=0;c<a.children.length;c++){var d=a.children[c].getDepth();b=d+1>b?d+1:b}return b},a.Tree.prototype.itor=function(a){function b(a){if(a.call(g,g))return!0;if(g.children.length>0)for(var b=0;b<g.children.length;b++)if(g.children[b].itor().each(a))return!0;return!1}function c(a){if(g.children.length>0)for(var b=0;b<g.children.length;b++)if(g.children[b].itor().leftChildFirst(a))return!0;if(a.call(g,g))return!0}function d(a){if(g.children.length>0)for(var b=g.children.length-1;b>=0;b--)if(g.children[b].itor().rightChildFirst(a))return!0;if(a.call(g,g))return!0}function e(a){f([g],a)}function f(a,b,c){if(0===a.length)return!0;c=c||0,c++;for(var d=[],e=!1,h=0;h<a.length;h++){if(b.call(g,a[h],c)){e=!0;break}d=d.concat(a[h].children)}return e&&(d=[]),f(d,b,c)}var g=this;return{each:b,leftChildFirst:c,rightChildFirst:d,depthDown:e}},a.Tree.prototype.toNodeList=function(){var a=[];return this.itor().depthDown(function(b){a.push(b)}),a},a.Tree.prototype.getNodeListGroupByLayer=function(){var a={};return this.itor().depthDown(function(b,c){a[c]||(a[c]=[]),a[c].push(b)}),a},a.Tree.prototype.getParentList=function(){for(var a=this,b=[];a.$parentID;){var d=c[a.$parentID];b.unshift(d),a=d}return b},a.Tree.prototype.getBrotherList=function(){var a=[];return a=this.$parentID?c[this.$parentID].children:[this]},a.Tree.createByJSON=function(b){var c=new a.Tree;if(c.data=b.data,a.utils.isArray(b.children)&&b.children.length>0)for(var d=0;d<b.children.length;d++)c.addChildTree(a.Tree.createByJSON(b.children[d]));return c},a.Tree.createByNodes=function(b){if(!a.utils.isArray(b)||0===b.length)return console.error("need an Array as param!");var c=null,d=[];return b.forEach(function(b){var e=new a.Tree;e.data=b,d.push(e),a.utils.isNum(b.parentID)||b.parentID||(c=e)}),d.forEach(function(a){d.forEach(function(b){b.data.parentID===a.data.id&&a.addChildTree(b)})}),c}}(window.Ycc);
//# sourceMappingURL=Ycc.Tree.class.min.js.map